groups:
- name: cf-app-sd
  jobs:
  - unit-tests
  - ushanka-cats
  - ushanka-acceptance-tests
  - ushanka-smoke-tests
  - ushanka-perf-tests
  - ushanka-deploy
  - ushanka-deploy-firehose-nozzle
  - beret-deploy
  - beret-deploy-firehose-nozzle
  - ship-what
  - ship-it
  - bump-minor-version
- name: ushanka
  jobs:
  - ushanka-bbl-up
  - ushanka-bbl-destroy
  - ushanka-deploy
  - ushanka-deploy-firehose-nozzle
  - ushanka-acceptance-tests
  - ushanka-smoke-tests
  - ushanka-perf-tests
  - ushanka-cats
  - delete-ushanka-deployment
- name: beret
  jobs:
  - beret-bbl-up
  - beret-bbl-destroy
  - beret-deploy
  - beret-deploy-firehose-nozzle
  - delete-beret-deployment

resource_types:
- name: staticfile
  type: docker-image
  source:
    repository: czero/staticfile-resource

resources:
  - name: cf-acceptance-tests
    type: git
    source:
      branch: vendor-proxy
      uri: https://github.com/cf-container-networking/cf-acceptance-tests
  - name: cf-app-sd-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-app-sd-release
      branch: master
  - name: cf-app-sd-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-app-sd-release
      branch: master
      paths:
      - ci
  - name: cf-app-sd-shipped-master
    type: git
    source:
      uri: "git@github.com:cloudfoundry/cf-app-sd-release.git"
      private_key: {{cf-app-sd-deployments-push-key}}
      branch: master
  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
      branch: master
      tag_filter: "v*"
  - name: cf-networking-deployments
    type: git
    source:
      uri: "git@github.com:cloudfoundry/cf-networking-deployments.git"
      branch: master
      private_key: {{cf-networking-deployments-push-key}}
  - name: cf-deployment
    type: git
    source:
      branch: release-candidate
      uri: https://github.com/cloudfoundry/cf-deployment.git

  - name: datadog-firehose-nozzle-release
    type: bosh-io-release
    source:
      repository: DataDog/datadog-firehose-nozzle-release

  ####### Timers
  - name: every-fifteen-minutes
    type: time
    source:
      interval: 15m
  ####### Release management
  - name: version
    type: semver
    source:
      bucket: {{cf-app-sd-s3-bucket}}
      region_name: us-west-2
      initial_version: 0.1.0-rc.1
      key: releases/current-version
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}
  - name: cf-app-sd-tarball
    type: s3
    source:
      bucket: {{cf-app-sd-candidate-s3-bucket}}
      region_name: us-west-2
      regexp: releases/cf-app-sd-(.*).tgz
      key: releases/current-version
      access_key_id: {{aws-access-key-id}}
      secret_access_key: {{aws-secret-access-key}}

  - name: cf-app-sd-github-release
    type: github-release
    source:
      user: cloudfoundry
      repository: cf-app-sd-release
      access_token: {{github-access-token}}


jobs:
  - name: unit-tests
    plan:
      - aggregate:
          - get: cf-app-sd-release
            trigger: true
          - get: cf-app-sd-ci
      - task: unit-tests
        file: cf-app-sd-ci/ci/tasks/test-unit.yml

  - name: ushanka-acceptance-tests
    serial_groups: [ushanka-deploy-group, ushanka-test-group]
    plan:
      - aggregate:
          - get: cf-networking-deployments
          - get: cf-app-sd-release
            passed: [ushanka-deploy]
            trigger: true
          - get: cf-app-sd-ci
          - get: cf-deployment
            passed: [ushanka-deploy]
            trigger: true
      - task: ushanka-acceptance-tests
        privileged: true
        file: cf-app-sd-ci/ci/tasks/test-acceptance.yml
        input_mapping:
          test-config: cf-networking-deployments
          vars-store: cf-networking-deployments
        params:
          ENVIRONMENT_NAME: ushanka

  - name: ushanka-smoke-tests
    serial_groups: [ushanka-deploy-group, ushanka-test-group]
    plan:
      - aggregate:
          - get: every-fifteen-minutes
            trigger: true
          - get: cf-networking-deployments
          - get: cf-app-sd-release
            passed: [ushanka-deploy]
            trigger: true
          - get: cf-app-sd-ci
          - get: cf-deployment
            passed: [ushanka-deploy]
            trigger: true
      - task: ushanka-smoke-tests
        privileged: true
        file: cf-app-sd-ci/ci/tasks/smoke-tests.yml
        input_mapping:
          test-config: cf-networking-deployments
        params:
          ENVIRONMENT_NAME: ushanka
          ENVIRONMENT_TAG: ushanka.c2c.cf-app.com
          DATADOG_API_KEY: {{datadog_api_key}}

  - name: ushanka-cats
    serial_groups: [ushanka-deploy-group, ushanka-test-group]
    plan:
      - aggregate:
          - get: cf-networking-deployments
          - get: cf-acceptance-tests
          - get: cf-app-sd-ci
          - get: cf-deployment-concourse-tasks
          - get: cf-app-sd-release
            passed:
            - ushanka-smoke-tests
            - ushanka-acceptance-tests
            trigger: true
          - get: cf-deployment
            passed:
            - ushanka-smoke-tests
            - ushanka-acceptance-tests
            trigger: true
      - task: copy-config
        file: cf-app-sd-ci/ci/tasks/copy-config.yml
        params:
          ENVIRONMENT: ushanka
      - task: cats
        file: cf-deployment-concourse-tasks/run-cats/task.yml
        params:
          NODES: 8

  - name: ushanka-perf-tests
    serial_groups: [ushanka-deploy-group, ushanka-test-group]
    plan:
      - aggregate:
          - get: cf-networking-deployments
          - get: cf-app-sd-release
            passed:
            - ushanka-smoke-tests
            - ushanka-acceptance-tests
            trigger: true
          - get: cf-app-sd-ci
          - get: cf-deployment
            passed:
            - ushanka-smoke-tests
            - ushanka-acceptance-tests
            trigger: true
      - task: ushanka-perf-tests
        privileged: true
        file: cf-app-sd-ci/ci/tasks/test-nats-performance.yml
        input_mapping:
          test-config: cf-networking-deployments
          deployments-repo: cf-networking-deployments
        params:
          ENVIRONMENT_NAME: ushanka

  - name: ushanka-bbl-up
    serial_groups: [ushanka-deploy-group, ushanka-test-group]
    plan:
      - aggregate:
          - get: cf-deployment-concourse-tasks
            trigger: true
          - get: cf-networking-deployments
      - task: bbl-up
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        params:
          BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
          BBL_GCP_REGION: us-east1
          BBL_STATE_DIR: environments/ushanka/
          BBL_IAAS: gcp
          BBL_LB_CERT: {{ushanka-lb-cert}}
          BBL_LB_KEY: {{ushanka-lb-key}}
          LB_DOMAIN: ushanka.c2c.cf-app.com
          BBL_ENV_NAME: ushanka
          OPS_FILES: local-dns.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          bbl-config: cf-networking-deployments
          ops-files: cf-networking-deployments
        ensure:
          put: cf-networking-deployments
          params:
            repository: updated-bbl-state
            rebase: true

  - name: ushanka-bbl-destroy
    serial_groups: [ushanka-deploy-group, ushanka-test-group]
    plan:
      - aggregate:
          - get: cf-deployment-concourse-tasks
          - get: cf-networking-deployments
      - task: bosh-cleanup
        file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
        params:
          BBL_STATE_DIR: environments/ushanka/
        input_mapping:
          bbl-state: cf-networking-deployments
      - task: bbl-destroy
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        params:
          BBL_STATE_DIR: environments/ushanka/
          BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        input_mapping:
          bbl-state: cf-networking-deployments
        ensure:
          put: cf-networking-deployments
          params:
            repository: updated-bbl-state
            rebase: true

  - name: ushanka-deploy-firehose-nozzle
    serial_groups: [ushanka-deploy-group]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-app-sd-ci
      - get: cf-networking-deployments
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-app-sd-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: ushanka
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        cf-deployment: cf-networking-deployments
        vars-store: cf-networking-deployments
        bbl-state: cf-networking-deployments
        vars-files: cf-networking-deployments
        ops-files: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/ushanka
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: ushanka.c2c.cf-app.com
        VARS_STORE_FILE: environments/ushanka/vars-store.yml

  - name: ushanka-deploy
    serial_groups: [ushanka-deploy-group]
    plan:
      - aggregate:
          - get: cf-deployment-concourse-tasks
          - get: cf-networking-deployments
          - get: cf-deployment
            trigger: true
          - get: cf-app-sd-release
            trigger: true
            passed: [unit-tests]
          - get: cf-app-sd-ci
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: environments/ushanka/
        input_mapping:
          bbl-state: cf-networking-deployments
      - task: collect-ops-files
        file: cf-app-sd-ci/ci/tasks/collect-ops-files.yml
        params:
          ENVIRONMENT_NAME: ushanka
        input_mapping:
          deployments-repo: cf-networking-deployments
      - task: upload-local-cf-app-sd-releases
        file: cf-app-sd-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: cf-app-sd-release
        params:
          BBL_STATE_DIR: environments/ushanka/
      - task: deploy-cf
        file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
        params:
          BBL_STATE_DIR: environments/ushanka/
          SYSTEM_DOMAIN: ushanka.c2c.cf-app.com
          OPS_FILES: use-compiled-releases.yml scale-to-one-az.yml smaller-footprint.yml datadog.yml use-bosh-dns-for-containers.yml use-bosh-dns.yml use-system-domain-as-metron-deployment-name.yml enable-service-discovery.yml use-latest.yml opsfile.yml
          VARS_STORE_FILE: environments/ushanka/vars-store.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          release: cf-app-sd-release
          vars-files: cf-networking-deployments
          vars-store: cf-networking-deployments
        ensure:
          put: cf-networking-deployments
          params:
            repository: updated-vars-store
            rebase: true
      - task: bosh-cleanup
        file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
        params:
          BBL_STATE_DIR: environments/ushanka/
        input_mapping:
          bbl-state: cf-networking-deployments

  - name: delete-ushanka-deployment
    serial_groups: [ushanka-deploy-group, ushanka-test-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/ushanka/
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: beret-bbl-up
    serial_groups: [beret-deploy-group]
    plan:
      - aggregate:
          - get: cf-deployment-concourse-tasks
            trigger: true
          - get: cf-networking-deployments
      - task: bbl-up
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        params:
          BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
          BBL_GCP_REGION: us-east1
          BBL_STATE_DIR: environments/beret/
          BBL_IAAS: gcp
          BBL_LB_CERT: {{beret-lb-cert}}
          BBL_LB_KEY: {{beret-lb-key}}
          LB_DOMAIN: beret.c2c.cf-app.com
          BBL_ENV_NAME: beret
          OPS_FILES: local-dns.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          bbl-config: cf-networking-deployments
          ops-files: cf-networking-deployments
        ensure:
          put: cf-networking-deployments
          params:
            repository: updated-bbl-state
            rebase: true

  - name: beret-bbl-destroy
    serial_groups: [beret-deploy-group]
    plan:
      - aggregate:
          - get: cf-deployment-concourse-tasks
          - get: cf-networking-deployments
      - task: bosh-cleanup
        file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
        params:
          BBL_STATE_DIR: environments/beret/
        input_mapping:
          bbl-state: cf-networking-deployments
      - task: bbl-destroy
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        params:
          BBL_STATE_DIR: environments/beret/
          BBL_GCP_SERVICE_ACCOUNT_KEY: environments/gcp/service-account.key.json
        input_mapping:
          bbl-state: cf-networking-deployments
        ensure:
          put: cf-networking-deployments
          params:
            repository: updated-bbl-state
            rebase: true

  - name: beret-deploy-firehose-nozzle
    serial_groups: [beret-deploy-group]
    plan:
    - aggregate:
      - get: cf-deployment-concourse-tasks
      - get: cf-app-sd-ci
      - get: cf-networking-deployments
      - get: datadog-firehose-nozzle-release
    - task: upload-datadog-firehose-nozzle-release
      file: cf-app-sd-ci/ci/tasks/upload-release-tarball.yml
      input_mapping:
        deployments-repo: cf-networking-deployments
        tarballs: datadog-firehose-nozzle-release
      params:
        ENVIRONMENT_NAME: beret
    - task: deploy-datadog-firehose-nozzle
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        cf-deployment: cf-networking-deployments
        vars-store: cf-networking-deployments
        bbl-state: cf-networking-deployments
        vars-files: cf-networking-deployments
        ops-files: cf-networking-deployments
      params:
        BBL_STATE_DIR: environments/beret
        MANIFEST_FILE: firehose-nozzles.yml
        OPS_FILES: ""
        SYSTEM_DOMAIN: beret.c2c.cf-app.com
        VARS_STORE_FILE: environments/beret/vars-store.yml


  - name: beret-deploy
    serial_groups: [beret-deploy-group]
    plan:
      - aggregate:
          - get: cf-deployment-concourse-tasks
          - get: cf-networking-deployments
          - get: cf-deployment
            passed: [ushanka-cats]
            trigger: true
          - get: cf-app-sd-release
            passed: [ushanka-cats, ushanka-perf-tests]
            trigger: true
          - get: cf-app-sd-ci
          - get: version
            params:
              pre: rc
      - task: upload-stemcell
        file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
        params:
          BBL_STATE_DIR: environments/beret/
        input_mapping:
          bbl-state: cf-networking-deployments
      - task: collect-ops-files
        file: cf-app-sd-ci/ci/tasks/collect-ops-files.yml
        params:
          ENVIRONMENT_NAME: beret
        input_mapping:
          deployments-repo: cf-networking-deployments
      - task: upload-local-cf-app-sd-releases
        file: cf-app-sd-ci/ci/tasks/upload-local-release.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          local-release: cf-app-sd-release
        params:
          BBL_STATE_DIR: environments/beret/
      - task: deploy-cf
        file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
        params:
          BBL_STATE_DIR: environments/beret/
          SYSTEM_DOMAIN: beret.c2c.cf-app.com
          OPS_FILES: use-compiled-releases.yml scale-to-one-az.yml smaller-footprint.yml datadog.yml use-bosh-dns-for-containers.yml use-bosh-dns.yml enable-service-discovery.yml use-system-domain-as-metron-deployment-name.yml use-latest.yml opsfile.yml
          VARS_STORE_FILE: environments/beret/vars-store.yml
        input_mapping:
          bbl-state: cf-networking-deployments
          release: cf-app-sd-release
          vars-files: cf-networking-deployments
          vars-store: cf-networking-deployments
        ensure:
          put: cf-networking-deployments
          params:
            repository: updated-vars-store
            rebase: true
      - task: create-release-tarball
        file: cf-app-sd-ci/ci/tasks/create-release-tarball.yml
        input_mapping:
          cf-app-sd: cf-app-sd-release
      - put: cf-app-sd-tarball
        params:
          file: tarballs/cf-app-sd-*.tgz
      - put: version
        params: {file: version/number}
      - task: bosh-cleanup
        file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
        params:
          BBL_STATE_DIR: environments/beret/
        input_mapping:
          bbl-state: cf-networking-deployments

  - name: delete-beret-deployment
    serial_groups: [beret-deploy-group, beret-test-group]
    plan:
    - aggregate:
      - get: cf-networking-deployments
      - get: cf-deployment-concourse-tasks
    - task: delete-deployment
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      params:
        BBL_STATE_DIR: environments/beret/
      input_mapping:
        bbl-state: cf-networking-deployments

  - name: ship-what
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: version
          passed: [beret-deploy]
        - get: cf-app-sd-release
          passed: [beret-deploy]
          trigger: true
        - get: cf-deployment
          passed: [beret-deploy]
        - get: cf-app-sd-tarball
          passed: [beret-deploy]

  - name: ship-it
    serial_groups: [version]
    plan:
    - do:
      - aggregate:
        - get: version
          params:
            bump: final
          passed: [ship-what]
        - get: cf-app-sd-tarball
          passed: [ship-what]
        - get: cf-app-sd-ci
        - get: cf-app-sd-release
          passed: [ship-what]
        - get: cf-app-sd-shipped-master
        - get: cf-networking-deployments
        - get: cf-deployment
          passed: [ship-what]
      - task: ship-it
        file: cf-app-sd-ci/ci/tasks/ship-it.yml
      - put: version
        params: {file: version/number}
      - put: cf-app-sd-shipped-master
        params:
          repository: release/master
          tag_prefix: v
          tag: version/number
      - put: cf-app-sd-tarball
        params:
          file: final-release/cf-app-sd-*.tgz
      - task: build-release-notes
        file: cf-app-sd-ci/ci/tasks/build-release-notes.yml
      - put: cf-app-sd-github-release
        params:
          name: version/number
          tag: version/number
          body: release-notes/notes.md
          tag_prefix: v
          globs:
          - final-release/cf-app-sd-*.tgz

  # bump minor version (i.e. 0.1.0 -> 0.2.0)
  - name: bump-minor-version
    serial_groups: [version]
    plan:
    - get: version
      trigger: true
      passed: [ship-it]
      params: {bump: minor, pre: rc}
    - put: version
      params: {file: version/number}
